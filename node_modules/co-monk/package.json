{
  "name": "co-monk",
  "version": "1.0.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/visionmedia/co-monk"
  },
  "description": "mongodb generator goodness for co",
  "keywords": [
    "co",
    "monk",
    "generators",
    "mongo",
    "mongodb"
  ],
  "dependencies": {
    "thunkify": "0.0.1"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*",
    "co": "~2.3.0",
    "monk": "~0.7.1"
  },
  "files": [
    "index.js"
  ],
  "license": "MIT",
  "readme": "\n# co-monk\n\n  MongoDB with generator goodness.\n\n## Installation\n\n```\n$ npm install co-monk\n```\n\n## Setup\n\n  Call `wrap()` on collections to make them generator friendly:\n\n```js\nvar monk = require('monk');\nvar wrap = require('co-monk');\nvar db = monk('localhost/test');\n\nvar users = wrap(db.get('users'));\n```\n\n## Example\n\n  Simple example:\n\n```js\nyield users.remove({});\n\nyield users.insert({ name: 'Tobi', species: 'ferret' });\nyield users.insert({ name: 'Loki', species: 'ferret' });\nyield users.insert({ name: 'Jane', species: 'ferret' });\n\nvar res = yield users.findOne({ name: 'Tobi' });\nres.name.should.equal('Tobi');\n\nvar res = yield users.find({ species: 'ferret' });\nres.should.have.length(3);\n```\n\n  Parallel inserts:\n\n```js\nyield users.remove({});\n\nyield [\n  users.insert({ name: 'Tobi', species: 'ferret' }),\n  users.insert({ name: 'Loki', species: 'ferret' }),\n  users.insert({ name: 'Jane', species: 'ferret' })\n];\n\nvar res = yield users.findOne({ name: 'Tobi' });\nres.name.should.equal('Tobi');\n\nvar res = yield users.find({ species: 'ferret' });\nres.should.have.length(3);\n```\n\n# License\n\n  MIT",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/visionmedia/co-monk/issues"
  },
  "homepage": "https://github.com/visionmedia/co-monk",
  "_id": "co-monk@1.0.0",
  "_shasum": "4491047df0a87e1d7cab76aaa971085530c80bf6",
  "_from": "co-monk@1.0.0",
  "_resolved": "https://registry.npmjs.org/co-monk/-/co-monk-1.0.0.tgz"
}
